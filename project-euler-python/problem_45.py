# ---------------------------------------------------------------
# Project Euler Problem 45 | Eshan Uniyal
# February 2018, Python 3 | Updated February 2018
# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
#   Triangle 	  	    Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
#   Pentagonal 	  	Pn=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
#   Hexagonal 	  	Hn=n(2n−1) 	  	1, 6, 15, 28, 45, ...
# It can be verified that T285 = P165 = H143 = 40755.
# Find the next triangle number that is also pentagonal and hexagonal.
# ---------------------------------------------------------------

import timer



# def isTriangular(num):
#     if ((((8 * num + 1) ** 0.5) - 1) / 2) % 1 == 0:
#         return(True)
#     else:
#         return(False)

def isPentagonal(num):
    if ((((24 * num + 1) ** 0.5) + 1) / 6) % 1 == 0:
        return(True)
    else:
        return(False)

# def isHexagonal(num):
#     if ((((8 * num + 1) ** 0.5) + 1) / 4) % 1 == 0:
#         return (True)
#     else:
#         return (False)

def main():
    valids = []
    n = 143
    while len(valids) != 2:
        num = n * (2 * n - 1)
        if isPentagonal(num) == True and isTriangular(num) == True:
            # print(num)
            valids.append(num)
        n += 1
    return(valids[-1])

timer.start()
print(main())
timer.end()